"""
Small add-on to make the main windows of Sao Mai Braille program accessible to NVDA
Copyright 2022 - 2025 by Sao Mai technology team
Last updated: June 30, 2025
"""

import appModuleHandler
import NVDAObjects.window
import keyboardHandler  # Use to send keystroke to SMB program
import time
import scriptHandler
from scriptHandler import script
import ui  # Test and debug
import winUser
import api

# The next two lines make this add-on translatable
import addonHandler
addonHandler.initTranslation()
script_category = "SMB"

class AppModule(appModuleHandler.AppModule):

    def isSaoMaiDocument(self):
        """Code generated by ChatGPT
        Check if the currently focused window is a .smd or .smb document."""
        hwnd = api.getForegroundObject().windowHandle
        windowTitle = winUser.getWindowText(hwnd).lower()
        return ".smd" in windowTitle or ".smb" in windowTitle

    def event_gainFocus(self, obj, nextHandler):
        NVDAObjects.window.windowClassMap['TSRichViewEdit'] = 'Edit'
        NVDAObjects.window.windowClassMap['TSRVRichViewEdit'] = 'Edit'
        NVDAObjects.window.windowClassMap['TSRVRichViewHeaderFooterEdit'] = 'Edit'
        NVDAObjects.window.windowClassMap['TSRVRichViewNoteEdit'] = 'Edit'
        NVDAObjects.window.windowClassMap['TDBSRichViewEdit'] = 'Edit'
        NVDAObjects.window.windowClassMap['TInnerDBRichViewEdit'] = 'Edit'
        NVDAObjects.window.windowClassMap['TDBSRVRichViewHeaderFooterEdit'] = 'Edit'
        NVDAObjects.window.windowClassMap['TDBSRVRichViewNoteEdit'] = 'Edit'
        nextHandler()

    @script(
        # Translators: Describes the Insert equation dialog.
        description=_("Call Insert equation dialog the old way."),
        category=script_category,
        gesture="kb:alt+f9"
    )
    def script_InsertEquation(self, gesture):
        if self.isSaoMaiDocument():
            time.sleep(0.5)
            keyboardHandler.KeyboardInputGesture.fromName("control+shift+q").send()
        else:
            ui.message("Not in a print, or braille document")

    @script(
        # Translators: Describes the Insert picture dialog.
        description=_("Call Insert picture dialog the old way."),
        category=script_category,
        gesture="kb:alt+f10"
    )
    def script_InsertPicture(self, gesture):
        if self.isSaoMaiDocument():
            time.sleep(0.5)
            keyboardHandler.KeyboardInputGesture.fromName("control+shift+g").send()
        else:
            ui.message("Not in a print, or braille document")

    @script(
        # Translators: Describes the Insert Music Score dialog.
        description=_("Call Insert Music Score dialog the old way."),
        category=script_category,

        gesture="kb:alt+f11"
    )
    def script_InsertMusicScore(self, gesture):
        if self.isSaoMaiDocument():
            time.sleep(0.5)
            keyboardHandler.KeyboardInputGesture.fromName("control+shift+m").send()
        else:
            ui.message("Not in a print, or braille document")
